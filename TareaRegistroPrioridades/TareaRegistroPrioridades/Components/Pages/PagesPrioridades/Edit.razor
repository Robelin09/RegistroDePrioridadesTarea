@page "/EditarPrioridad"
@page "/EditarPrioridad/{EditarPrioridadId:int}"
@inject PrioridadService prioridadservice
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Editar Prioridad</PageTitle>
<EditForm Model="prioridad" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header">
            <h1>Editar Prioridad</h1>
        </div>
        <div class="card-body">
            <label>ID:</label>
            <div class="input-group">
                <InputNumber @bind-Value="prioridad.PrioridadId" class="id-input"></InputNumber>
            </div>
            <div>
                <label>Descripci&oacuten:</label>
                <InputText @bind-Value="prioridad.Descripcion" class="form-control"></InputText>
                <ValidationMessage For="@(() => prioridad.Descripcion)" />
            </div>
            <div>
                <label>D&iacuteas Compromiso</label>
                <InputNumber @bind-Value="prioridad.DiasCompromiso" class="form-control"></InputNumber>
                <ValidationMessage For="@(() => prioridad.DiasCompromiso)" />
            </div>
        </div>
        <div class="card-footer">
            <button type="button" class="btn btn-outline-primary" @onclick="Atras">Volver <i class="bi bi-arrow-return-left" /></button>
            <button type="submit" class="btn btn-success">Modificar <i class="bi bi-floppy-fill"></i></button>
        </div>
    </div>
    <h3>@Mensaje</h3>
</EditForm>

@code {

    [Parameter]
    public int EditarPrioridadId { get; set; }
    public string Mensaje = " ";
    public Prioridades prioridad { get; set; } = new Prioridades();

    protected override async Task OnInitializedAsync()
    {
        if (EditarPrioridadId > 0)
        {
            this.prioridad.PrioridadId = EditarPrioridadId;
            await this.Buscar();
        }
    }
    public async Task Buscar()
    {
        var prioridadEncontrada = await prioridadservice.Buscar(prioridad.PrioridadId);

        if (prioridadEncontrada != null)
        {
            this.prioridad = prioridadEncontrada;
        }
    }
    public async Task Guardar()
    {
        if (!await ValidarAsync())
        {
            return;
        }
        {
            if (await prioridadservice.Guardar(this.prioridad))
            {
                Mensaje = "Sus datos han sido guardados correctamente.";
                Atras();
            }
        }
    }
    async Task<bool> ValidarAsync()
    {
        bool esValido = true;
        return esValido;
    }
    void Atras()
    {
        Navigation.NavigateTo("DetallePrioridad");
    }
}
