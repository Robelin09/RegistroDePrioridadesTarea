@page "/EliminarTicket"
@page "/EliminarTicket/{TicketId:int}"
@inject TicketService ticketservice
@inject NavigationManager Navigation
@rendermode InteractiveServer

<div class="card">
    <div class="card-header">
        <h1>¿Desea Eliminar este Ticket?</h1>
    </div>
    <div class="card-body">
        <h5 class="card-title">Detalles de Tickets</h5>
        <dl class="row">
            <dt class="col-sm-3">TicketId:</dt>
            <dd class="col-sm-9">@ticket.TicketId</dd>

            <dt class="col-sm-3">Fecha:</dt>
            <dd class="col-sm-9">@ticket.Fecha</dd>

            <dt class="col-sm-3">ClienteId:</dt>
            <dd class="col-sm-9">@ticket.ClienteId</dd>

            <dt class="col-sm-3">SistemaId:</dt>
            <dd class="col-sm-9">@ticket.SistemaId</dd>

            <dt class="col-sm-3">PrioridadId:</dt>
            <dd class="col-sm-9">@ticket.PrioridadId</dd>

            <dt class="col-sm-3">Solicitado por:</dt>
            <dd class="col-sm-9">@ticket.SolicitadoPor</dd>

            <dt class="col-sm-3">Asunto:</dt>
            <dd class="col-sm-9">@ticket.Asunto</dd>

            <dt class="col-sm-3">Descripci&oacuten:</dt>
            <dd class="col-sm-9">@ticket.Descripcion</dd>
        </dl>
    </div>
    <div class="card-footer">
        <button type="button" class="btn btn-outline-primary" @onclick="Atras">Volver <i class="bi bi-arrow-return-left" /></button>
        <button type="button" class="btn btn-outline-danger" @onclick="Eliminar">Eliminar</button>
    </div>
</div>

@code {
    [Parameter]
    public int TicketId { get; set; }
    public Tickets ticket { get; set; } = new Tickets();

    protected override async Task OnInitializedAsync()
    {
        if (TicketId > 0)
        {
            ticket.TicketId = TicketId;
            await this.Buscar();
        }
    }
    public async Task Buscar()
    {
        var ticketEncontrado = await ticketservice.Buscar(ticket.TicketId);

        if (ticketEncontrado != null)
        {
            this.ticket = ticketEncontrado;
        }
    }
    public async Task Eliminar()
    {
        if (!await ticketservice.Existe(ticket.TicketId))
        {
            return;
        }
        if (await ticketservice.Eliminar(this.ticket))
        {
            Atras();
        }
    }
    void Atras()
    {
        Navigation.NavigateTo("/DetalleTickets");
    }
}
