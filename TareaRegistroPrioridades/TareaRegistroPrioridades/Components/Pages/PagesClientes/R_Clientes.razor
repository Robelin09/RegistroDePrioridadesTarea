@page "/RegistroClientes"
@page "/RegistroClientes/{ClientesId:int}"
@inject ClientesSERVICES clientesservices
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Registro de Clientes</PageTitle>

<EditForm Model="clientes" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />    

        <div class="card">
            <div class="card-header">
                <h1>Registro de Clientes</h1>
            </div>
            <div class="card-body">
                <label>ID</label>
                <div class="input-group">
                    <InputNumber min="0" @bind-Value="clientes.ClienteId" class="id-input"></InputNumber>
                    <button type="button" class="btn btn-primary bi bi-search" @onclick="Buscar"></button>

                </div>
                <div>
                    <label>Nombres:</label>
                <InputText @bind-Value="clientes.Nombres" placeholder="Ej: Robelin Concepcion" class="form-control"></InputText>
                    <validationMessage For="@(() => clientes.Nombres)" />
                        @if (nombreexistente)
                        {
                            <p class="text-danger">El nombre ya existe</p>
                        }
                </div>
                <div>
                <label>T&eacutelefono:</label>
                <InputText @bind-Value="clientes.Telefono" placeholder="Ej: 8092551542" class="form-control"></InputText>
                    <validationMessage For="@(() => clientes.Telefono)"/>
                </div>
                <div>
                    <label>Celular:</label>
                <InputText @bind-Value="clientes.Celular" placeholder="Ej: 8096159699" class="form-control"></InputText>
                    <validationMessage For="@(() => clientes.Celular)"/>
                </div>
                <div>
                    <label>RNC:</label>
                <InputText @bind-Value="clientes.RNC" placeholder="Ej: 40254845213" class="form-control"></InputText>
                    <validationMessage For="@(() => clientes.RNC)"/>
                        @if (rncexistente)
                        {
                            <p class="text-danger">El RNC ya existe</p>
                        }
                </div>
                <div>
                    <label>Email:</label>
                <InputText @bind-Value="clientes.Email" placeholder="Ej: Fulano@gmail.com" class="form-control"></InputText>
                    <validationMessage For="@(() => clientes.Email)"/>
                </div>
                <div>
                    <label>Direcci&oacuten:</label>
                <InputText @bind-Value="clientes.Direccion" placeholder="Ej: SFM, Vista Del Valle #25" class="form-control"></InputText>
                    <validationMessage For="@(() => clientes.Direccion)"/>
                </div>
            </div>
            <div class="card-footer">
            <button type="button" class="btn btn-outline-primary" @onclick="Atras">Volver <i class="bi bi-arrow-return-left" /></button>
            <button type="submit" class="btn btn-success">Guardar <i class="bi bi-floppy-fill" /></button>
            </div>
        </div>
        <h4>@Mensaje</h4>
</EditForm>

@code {

    [Parameter]
    public int ClientesId { get; set; }
    public string Mensaje = " ";
    private bool nombreexistente = false;
    private bool rncexistente = false;

    public Clientes clientes { get; set; } = new Clientes();

protected override void OnInitialized()
    {
        if (ClientesId > 0)
        {
            this.clientes.ClienteId = ClientesId;
            this.Buscar();
        }
    }

    public void Buscar()
    {
        var clienteEncontrado = clientesservices.Buscar(clientes.ClienteId);

        if (clienteEncontrado != null)
        {
          this.clientes = clienteEncontrado;
        }
    }

void Nuevo()
    {
        this.clientes = new Clientes();
        Mensaje = " ";
    }

    void Guardar()
    {
        if (!Validar())
        {
            Mensaje = "Sus datos no han sido guardados correctamente.";
            return;
        }
        {
            if (clientesservices.Guardar(this.clientes))
            {
                this.Nuevo();
                Mensaje = "Sus datos han sido guardados correctamente.";
            }
        }
    }

    public bool Validar()
    {
        nombreexistente = clientesservices.Listar(c => c.Nombres == clientes.Nombres && c.ClienteId != clientes.ClienteId).Any();
        rncexistente = clientesservices.Listar(c => c.RNC == clientes.RNC && c.ClienteId != clientes.ClienteId).Any();

        if (nombreexistente || rncexistente)
        {
            Mensaje = "El nombre o RNC ya existe";
            return false;
        }
        return true;
    }
   
    void Atras()
    {
        Navigation.NavigateTo("DetalleClientes");
    }
}